[gd_scene load_steps=14 format=3 uid="uid://f3m2x66012u8"]

[ext_resource type="Texture2D" uid="uid://5w5juu43udfk" path="res://Assets/Particles/fire_01.png" id="2_7ohmi"]
[ext_resource type="Texture2D" uid="uid://dlh4ag8pkjxp1" path="res://Assets/Particles/smoke_07.png" id="2_lssa7"]
[ext_resource type="PackedScene" uid="uid://mmtt08q3veuh" path="res://Components/UI/HUD/hud.tscn" id="4_olpel"]

[sub_resource type="GDScript" id="GDScript_1q24b"]
script/source = "extends CharacterBody2D
class_name Player

#TODO: Need to add a bar that will stop you from boosting when you run out of boost

var wheel_base = 70
@export var steering_angle = 15
@export var engine_power = 800 ##The speed at which you move forward
@export var friction = -0.9
var drag = -0.001
@export var braking = -450 ##The speed at which you move backward
@export var max_speed_reversed = 250 ##The speed limiter/penalty for moving backward
@export_group(\"Drift Settings\")
@export var slip_speed = 400 ##The speed we need to be going for us to start sliding
@export var traction_fast = 0.1 ##The traction we have at high speeds
@export var traction_slow = 0.7
@export var whenDrifting = 0.01 ##The amount of traction we have while holding down the drift button
@export var driftSpeedPenalty : float = 200

@export_group(\"Boost Settings\")
@export var boostSteeringAngle = 5 ##The limited steering angle when boosting
@export var boostSpeed = 2000 ##The amount of power that is applied when you accelerate while boosting
@export var boostZoom = 0.4
@export_subgroup(\"Nitro\")
@export var maxNitro = 100 ##The max amount of nitro you can hold
@export var nitroGainRate : float = 10
@export var nitroLoseRate : float = 15

@export_group(\"References\")
@export var driftParticles : GPUParticles2D
@export var boostParticles : GPUParticles2D
@export var camera : Camera2D
@export var nitroBar : NitroBar
@export var hud : CanvasLayer

var acceleration = Vector2.ZERO
var steer_direction
var currentNitro : float = 100

var currentSpeedPenalty : float = 0

var originalCameraZoom : Vector2
var cameraTween : Tween

var isDrifting : bool = false
var isBoosting : bool = false
var canBoost : bool = true

func _ready() -> void:
	originalCameraZoom = camera.zoom
	nitroBar.initNitro(maxNitro)
	Global.finished.connect(onFinish)

func _physics_process(delta : float) -> void:
	acceleration = Vector2.ZERO
	get_input()
	apply_friction()
	calculate_steering(delta)
	toggleEffects(delta)
	velocity += acceleration * delta
	move_and_slide()

func get_input():
	canBoost = nitroBar.nitro > 0
	
	isBoosting = Input.is_action_pressed(\"boost\") and canBoost
	
	var turn = Input.get_action_strength(\"steer_right\") - Input.get_action_strength(\"steer_left\")
	steer_direction = turn * deg_to_rad(steering_angle)
	if isBoosting:
		steer_direction = turn * deg_to_rad(boostSteeringAngle)
	
	if Input.is_action_pressed(\"accelerate\"):
		acceleration = transform.x * (engine_power - currentSpeedPenalty)
		
		if isBoosting:
			acceleration = transform.x * boostSpeed
	if Input.is_action_pressed(\"reverse\"):
		acceleration = transform.x * braking
	
	isDrifting = Input.is_action_pressed(\"drift\")

func toggleEffects(delta : float):
	driftParticles.emitting = isDrifting
	boostParticles.emitting = isBoosting
	
	if isDrifting and not isBoosting:
		nitroBar.nitro += delta * nitroGainRate
	
	if isBoosting:
		setCameraZoom(boostZoom)
		nitroBar.nitro -= delta * nitroLoseRate
	elif not isBoosting and camera.zoom != originalCameraZoom:
		setCameraZoom(originalCameraZoom.x)

func setCameraZoom(zoom : float) -> void:
	if cameraTween:
		cameraTween.kill()
	
	cameraTween = create_tween()
	cameraTween.tween_property(camera, \"zoom\", Vector2(zoom, zoom), 0.2)

func calculate_steering(delta):
	var rear_wheel = position - transform.x * wheel_base/2.0
	var front_wheel = position + transform.x * wheel_base/2.0
	rear_wheel += velocity * delta
	front_wheel += velocity.rotated(steer_direction) * delta
	var new_heading = (front_wheel - rear_wheel).normalized()
	var traction = traction_slow
	
	if velocity.length() > slip_speed:
		traction = traction_fast
	if isDrifting:
		traction = whenDrifting
		currentSpeedPenalty = driftSpeedPenalty
	else:
		currentSpeedPenalty = 0
	
	var d = new_heading.dot(velocity.normalized())
	if d > 0:
		velocity = velocity.lerp(new_heading * velocity.length(), traction)
	if d < 0:
		velocity = -new_heading * min(velocity.length(), max_speed_reversed)
	rotation = new_heading.angle()
	
func apply_friction():
	if velocity.length() < 5:
		velocity = Vector2.ZERO
	var friction_force = velocity * friction
	var drag_force = velocity * velocity.length() * drag
	acceleration += drag_force + friction_force

func onFinish():
	hud.hide()

func _on_area_2d_area_entered(area: Area2D) -> void:
	if area.is_in_group(\"road\"):
		engine_power = 1600
		boostSpeed = 4000
		braking = -900
		max_speed_reversed = 500
		
func _on_area_2d_area_exited(area: Area2D) -> void:
	if area.is_in_group(\"road\"):
		engine_power = 800
		boostSpeed = 2500
		braking = -450
		max_speed_reversed = 250
"

[sub_resource type="Gradient" id="Gradient_ap450"]
offsets = PackedFloat32Array(0, 0.25, 0.618852, 1)
colors = PackedColorArray(0, 0.486928, 0.882587, 1, 0.759373, 0.300629, 1.92523e-07, 1, 0.913704, 0.378919, 0, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_cxybv"]
gradient = SubResource("Gradient_ap450")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_ismva"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(20, 20, 40)
angle_min = 1.07288e-05
angle_max = 720.0
direction = Vector3(-1, 0, 0)
spread = 15.0
initial_velocity_min = 500.0
initial_velocity_max = 500.0
gravity = Vector3(0, -30, 0)
scale_min = 0.1
scale_max = 0.2
color_ramp = SubResource("GradientTexture1D_cxybv")

[sub_resource type="Gradient" id="Gradient_1ynvl"]
offsets = PackedFloat32Array(0, 0.536885, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_1smmp"]
gradient = SubResource("Gradient_1ynvl")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_wmiji"]
particle_flag_disable_z = true
angle_min = 1.07288e-05
angle_max = 720.0
direction = Vector3(-1, 0, 0)
initial_velocity_min = 200.0
initial_velocity_max = 200.0
gravity = Vector3(0, -30, 0)
scale_min = 0.1
scale_max = 0.2
color_ramp = SubResource("GradientTexture1D_1smmp")

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_i1bq3"]
radius = 20.0
height = 78.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_6fnhn"]
radius = 20.0
height = 78.0

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_h2cff"]
load_path = "res://.godot/imported/player.png-c53b7137b898d1cbbcfe3d44175cd229.ctex"

[node name="Player" type="CharacterBody2D" node_paths=PackedStringArray("driftParticles", "boostParticles", "camera", "nitroBar")]
scale = Vector2(1.00643, 1)
script = SubResource("GDScript_1q24b")
driftParticles = NodePath("DriftParticles")
boostParticles = NodePath("BoostParticles")
camera = NodePath("Camera2D")
nitroBar = NodePath("HUD/NitroBar")

[node name="ColorRect" type="ColorRect" parent="."]
offset_right = 78.0
offset_bottom = 40.0
color = Color(0.923431, 0.411815, 0, 1)

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(41, 20)
zoom = Vector2(0.5, 0.5)

[node name="BoostParticles" type="GPUParticles2D" parent="."]
position = Vector2(-11, 21)
emitting = false
amount = 100
process_material = SubResource("ParticleProcessMaterial_ismva")
texture = ExtResource("2_7ohmi")
lifetime = 0.4

[node name="DriftParticles" type="GPUParticles2D" parent="."]
position = Vector2(-12, 20)
emitting = false
amount = 30
process_material = SubResource("ParticleProcessMaterial_wmiji")
texture = ExtResource("2_lssa7")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(-0.993608, -22)
rotation = 1.5708
scale = Vector2(4.57699, 4.88)
shape = SubResource("CapsuleShape2D_i1bq3")

[node name="Area2D" type="Area2D" parent="." groups=["player"]]
position = Vector2(-190, -115)
scale = Vector2(4.91428, 4.70464)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(39, 20)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_6fnhn")

[node name="HUD" parent="." instance=ExtResource("4_olpel")]

[node name="Sprite2D" type="Sprite2D" parent="."]
rotation = 1.5708
texture = SubResource("CompressedTexture2D_h2cff")

[connection signal="area_entered" from="Area2D" to="." method="_on_area_2d_area_entered"]
[connection signal="area_exited" from="Area2D" to="." method="_on_area_2d_area_exited"]

[editable path="HUD"]
